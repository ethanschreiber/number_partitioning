/*
 * Moffitt.hpp
 *
 *  Created on: Aug 20, 2013
 *      Author: ethan
 */

#ifndef MOFFITT_HPP_
#define MOFFITT_HPP_

#include "../PackingUtils.hpp"

namespace moffitt {
template <class T>

//      To round up q = x/y :
//      - q = (x + y - 1) / y;
//      - or (avoiding overflow in x+y)
//        q = 1 + ((x - 1) / y); // if x != 0
T divCeiling (T x, T y) {
 return 1 + ((x - 1) / y);
}


inline string spaces(int K) {
  std::ostringstream out;
  for (int i=0;i<10-K;i++) {
    out << "  ";
  }
  return out.str();
}



uint64_t executeMoffitt(const PartitioningProblem &problem, BinPackingStats &stats);
uint64_t testMoffitt(const PartitioningProblem &problem, BinPackingStats &stats);
uint64_t search(const int K,
                const vector<uint64_t> &elements, const uint64_t elementsSum,
                 const uint64_t CMax, uint64_t maxSoFar);

} // End Namespace

#endif /* MOFFITT_HPP_ */
