/*
 * HorowitzSahni.hpp
 *
 *  Created on: May 8, 2014
 *      Author: ethan
 */

#ifndef HOROWITZSAHNI_HPP_
#define HOROWITZSAHNI_HPP_
#include "SubsetSum.hpp"


using std::vector;
namespace ss {

/**
 * Given a new candidate solution, the sum of S and perfect, return the new upper bound.
 * Returns perfect-1 if the newValue was perfect (or 1 less than perfect).
 */
inline uint64_t getPartitionUpper(const uint64_t newValue, const uint64_t perfect, const uint64_t sum) {

  if ((newValue == perfect) ||
      (newValue == perfect-1)) {       // if cga is perfect, return perfect
    return perfect-1;
  } else if (newValue > perfect) {     // If > perfect,
    return newValue-1;                 // upper bound is 1 less
  } else {                             // If < perfect
    return sum - newValue - 1;        // upper bound is 1 less than complement
  }
}
}
#endif /* HOROWITZSAHNI_HPP_ */
